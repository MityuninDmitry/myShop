services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://postgres:5432/myShop
      - SPRING_R2DBC_USERNAME=springuser
      - SPRING_R2DBC_PASSWORD=springpass
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/myShop
      - SPRING_DATASOURCE_USERNAME=springuser
      - SPRING_DATASOURCE_PASSWORD=springpass
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: springuser
      POSTGRES_PASSWORD: springpass
      POSTGRES_DB: myShop
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U springuser -d myShop" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  pgdata:
  redis_data: